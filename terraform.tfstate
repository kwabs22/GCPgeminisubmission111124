{
  "version": 4,
  "terraform_version": "1.5.7",
  "serial": 25,
  "lineage": "236c6935-4c61-cd6f-002f-fb8f51166c66",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "local_file",
      "name": "website_files",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "index_key": "index.html",
          "schema_version": 0,
          "attributes": {
            "content": "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003ctitle\u003eSustainableCare Dashboard (Local Demo)\u003c/title\u003e\n    \u003c!-- Include Chart.js from CDN --\u003e\n    \u003cscript src=\"https://cdn.jsdelivr.net/npm/chart.js\"\u003e\u003c/script\u003e\n    \u003cstyle\u003e\n        body {\n            font-family: Arial, sans-serif;\n            margin: 20px;\n        }\n        h1 {\n            text-align: center;\n        }\n        .button-container {\n            text-align: center;\n            margin-bottom: 20px;\n        }\n        button {\n            margin: 5px;\n            padding: 10px 15px;\n            font-size: 16px;\n            cursor: pointer;\n        }\n        table {\n            width: 100%;\n            border-collapse: collapse;\n            margin-bottom: 30px;\n        }\n        th, td {\n            border: 1px solid #ddd;\n            padding: 8px;\n            text-align: center;\n        }\n        th {\n            background-color: #f2f2f2;\n        }\n        .chart-container {\n            width: 100%;\n            margin-bottom: 30px;\n        }\n        canvas {\n            max-width: 100%;\n            height: auto;\n        }\n        .hidden {\n            display: none;\n        }\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n    \u003ch1\u003eSustainableCare Dashboard (Local Demo)\u003c/h1\u003e\n\n    \u003cdiv class=\"button-container\"\u003e\n        \u003cbutton onclick=\"loadData()\"\u003eLoad Data\u003c/button\u003e\n        \u003cbutton onclick=\"plotEnergyByDepartment()\"\u003ePlot Energy by Department\u003c/button\u003e\n        \u003cbutton onclick=\"plotEnergyOverTimeICU()\"\u003ePlot Energy Over Time (ICU)\u003c/button\u003e\n        \u003cbutton onclick=\"showAnomalies()\"\u003eShow Anomalies\u003c/button\u003e\n    \u003c/div\u003e\n\n    \u003c!-- Main Data Table --\u003e\n    \u003ch2\u003eSensor Data\u003c/h2\u003e\n    \u003ctable id=\"data-table\"\u003e\n        \u003cthead\u003e\n            \u003ctr\u003e\n                \u003cth\u003eTimestamp\u003c/th\u003e\n                \u003cth\u003eDepartment\u003c/th\u003e\n                \u003cth\u003eEnergy (kWh)\u003c/th\u003e\n                \u003cth\u003eTemperature (Â°C)\u003c/th\u003e\n                \u003cth\u003eHumidity (%)\u003c/th\u003e\n                \u003cth\u003eOccupancy\u003c/th\u003e\n            \u003c/tr\u003e\n        \u003c/thead\u003e\n        \u003ctbody\u003e\n            \u003c!-- Data will be populated here --\u003e\n        \u003c/tbody\u003e\n    \u003c/table\u003e\n\n    \u003c!-- Anomalies Table --\u003e\n    \u003ch2\u003eAnomalies\u003c/h2\u003e\n    \u003ctable id=\"anomaly-table\"\u003e\n        \u003cthead\u003e\n            \u003ctr\u003e\n                \u003cth\u003eTimestamp\u003c/th\u003e\n                \u003cth\u003eSensor ID\u003c/th\u003e\n                \u003cth\u003eEnergy (kWh)\u003c/th\u003e\n                \u003cth\u003eAnomaly\u003c/th\u003e\n            \u003c/tr\u003e\n        \u003c/thead\u003e\n        \u003ctbody\u003e\n            \u003c!-- Anomalies will be populated here --\u003e\n        \u003c/tbody\u003e\n    \u003c/table\u003e\n\n    \u003c!-- Charts --\u003e\n    \u003cdiv class=\"chart-container\"\u003e\n        \u003ccanvas id=\"energyByDeptChart\"\u003e\u003c/canvas\u003e\n    \u003c/div\u003e\n\n    \u003cdiv class=\"chart-container\"\u003e\n        \u003ccanvas id=\"energyOverTimeICUChart\"\u003e\u003c/canvas\u003e\n    \u003c/div\u003e\n\n    \u003cscript\u003e\n        // Function to generate mock data\n        function generateMockData(hours = 24) {\n            const departments = ['ICU', 'Radiology', 'ER', 'Admin'];\n            const sensorData = [];\n            const now = new Date();\n\n            for (let i = 0; i \u003c hours; i++) {\n                const timestamp = new Date(now.getTime() - i * 60 * 60 * 1000);\n                for (let j = 1; j \u003c= 10; j++) { // 10 sensors\n                    const energy_kwh = getRandomFloat(50, 500);\n                    sensorData.push({\n                        timestamp: formatDate(timestamp),\n                        sensor_id: `sensor_${j.toString().padStart(3, '0')}`,\n                        department: departments[Math.floor(Math.random() * departments.length)],\n                        energy_kwh: parseFloat(energy_kwh.toFixed(2)),\n                        temperature_c: parseFloat(getRandomFloat(18, 30).toFixed(2)),\n                        humidity: Math.floor(getRandomFloat(30, 70)),\n                        occupancy: Math.floor(getRandomInt(0, 20)),\n                        anomaly: energy_kwh \u003e 450 ? 'Anomaly' : 'Normal'\n                    });\n                }\n            }\n\n            return sensorData;\n        }\n\n        // Helper functions\n        function getRandomFloat(min, max) {\n            return Math.random() * (max - min) + min;\n        }\n\n        function getRandomInt(min, max) {\n            return Math.floor(Math.random() * (max - min + 1)) + min;\n        }\n\n        function formatDate(date) {\n            const year = date.getFullYear();\n            const month = String(date.getMonth() + 1).padStart(2, '0');\n            const day = String(date.getDate()).padStart(2, '0');\n            const hours = String(date.getHours()).padStart(2, '0');\n            const minutes = String(date.getMinutes()).padStart(2, '0');\n            return `${year}-${month}-${day} ${hours}:${minutes}`;\n        }\n\n        // Global variables\n        let mockData = [];\n        let energyByDeptChart = null;\n        let energyOverTimeICUChart = null;\n\n        // Function to load data into the table\n        function loadData() {\n            mockData = generateMockData();\n            const tableBody = document.querySelector('#data-table tbody');\n            tableBody.innerHTML = ''; // Clear existing data\n\n            mockData.forEach(row =\u003e {\n                const tr = document.createElement('tr');\n                tr.innerHTML = `\n                    \u003ctd\u003e${row.timestamp}\u003c/td\u003e\n                    \u003ctd\u003e${row.department}\u003c/td\u003e\n                    \u003ctd\u003e${row.energy_kwh}\u003c/td\u003e\n                    \u003ctd\u003e${row.temperature_c}\u003c/td\u003e\n                    \u003ctd\u003e${row.humidity}\u003c/td\u003e\n                    \u003ctd\u003e${row.occupancy}\u003c/td\u003e\n                `;\n                tableBody.appendChild(tr);\n            });\n        }\n\n        // Function to plot energy by department\n        function plotEnergyByDepartment() {\n            if (mockData.length === 0) {\n                alert(\"Please load data first.\");\n                return;\n            }\n\n            // Group data by department and sum energy\n            const departmentEnergy = {};\n            mockData.forEach(row =\u003e {\n                if (departmentEnergy[row.department]) {\n                    departmentEnergy[row.department] += row.energy_kwh;\n                } else {\n                    departmentEnergy[row.department] = row.energy_kwh;\n                }\n            });\n\n            const departments = Object.keys(departmentEnergy);\n            const energies = Object.values(departmentEnergy).map(e =\u003e e.toFixed(2));\n\n            // Destroy existing chart if any\n            if (energyByDeptChart) {\n                energyByDeptChart.destroy();\n            }\n\n            const ctx = document.getElementById('energyByDeptChart').getContext('2d');\n            energyByDeptChart = new Chart(ctx, {\n                type: 'bar',\n                data: {\n                    labels: departments,\n                    datasets: [{\n                        label: 'Total Energy Consumption (kWh)',\n                        data: energies,\n                        backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                        borderColor: 'rgba(54, 162, 235, 1)',\n                        borderWidth: 1\n                    }]\n                },\n                options: {\n                    responsive: true,\n                    plugins: {\n                        title: {\n                            display: true,\n                            text: 'Total Energy Consumption by Department'\n                        },\n                        legend: {\n                            display: false\n                        }\n                    },\n                    scales: {\n                        y: {\n                            beginAtZero: true\n                        }\n                    }\n                }\n            });\n        }\n\n        // Function to plot energy over time for ICU\n        function plotEnergyOverTimeICU() {\n            if (mockData.length === 0) {\n                alert(\"Please load data first.\");\n                return;\n            }\n\n            // Filter ICU data and sort by timestamp\n            const icuData = mockData.filter(row =\u003e row.department === 'ICU')\n                                     .sort((a, b) =\u003e new Date(a.timestamp) - new Date(b.timestamp));\n\n            const timestamps = icuData.map(row =\u003e row.timestamp);\n            const energies = icuData.map(row =\u003e row.energy_kwh);\n\n            // Destroy existing chart if any\n            if (energyOverTimeICUChart) {\n                energyOverTimeICUChart.destroy();\n            }\n\n            const ctx = document.getElementById('energyOverTimeICUChart').getContext('2d');\n            energyOverTimeICUChart = new Chart(ctx, {\n                type: 'line',\n                data: {\n                    labels: timestamps,\n                    datasets: [{\n                        label: 'ICU Energy Consumption (kWh)',\n                        data: energies,\n                        fill: false,\n                        borderColor: 'rgba(255, 99, 132, 1)',\n                        tension: 0.1\n                    }]\n                },\n                options: {\n                    responsive: true,\n                    plugins: {\n                        title: {\n                            display: true,\n                            text: 'Energy Consumption Over Time for ICU'\n                        },\n                        legend: {\n                            display: false\n                        }\n                    },\n                    scales: {\n                        x: {\n                            ticks: {\n                                maxTicksLimit: 10,\n                                maxRotation: 45,\n                                minRotation: 45\n                            }\n                        },\n                        y: {\n                            beginAtZero: true\n                        }\n                    }\n                }\n            });\n        }\n\n        // Function to show anomalies\n        function showAnomalies() {\n            if (mockData.length === 0) {\n                alert(\"Please load data first.\");\n                return;\n            }\n\n            const anomalies = mockData.filter(row =\u003e row.anomaly === 'Anomaly');\n            const tableBody = document.querySelector('#anomaly-table tbody');\n            tableBody.innerHTML = ''; // Clear existing data\n\n            anomalies.forEach(row =\u003e {\n                const tr = document.createElement('tr');\n                tr.innerHTML = `\n                    \u003ctd\u003e${row.timestamp}\u003c/td\u003e\n                    \u003ctd\u003e${row.sensor_id}\u003c/td\u003e\n                    \u003ctd\u003e${row.energy_kwh}\u003c/td\u003e\n                    \u003ctd\u003e${row.anomaly}\u003c/td\u003e\n                `;\n                tableBody.appendChild(tr);\n            });\n\n            if (anomalies.length === 0) {\n                const tr = document.createElement('tr');\n                tr.innerHTML = `\u003ctd colspan=\"4\"\u003eNo anomalies found.\u003c/td\u003e`;\n                tableBody.appendChild(tr);\n            }\n        }\n\n    \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n",
            "content_base64": "",
            "content_base64sha256": "v4mupQi5p7QPiPBAQWsjWmMDWyu0tY/mNGIX57l3dBA=",
            "content_base64sha512": "w8xFp5XFRFRYRRH59l8zmwJUhqOfQgHM7oXY1tQjsy9vAJGiKJNz1nLcJSClRjrFPPYM0NUE9Cv1zyUoZIoWAg==",
            "content_md5": "ea73c50acbd9bfce249006c8a96e4e27",
            "content_sha1": "a510faccf6ec1b2a595b5f6ad644b9b3ffc5234e",
            "content_sha256": "bf89aea508b9a7b40f88f040416b235a63035b2bb4b58fe6346217e7b9777410",
            "content_sha512": "c3cc45a795c54454584511f9f65f339b025486a39f4201ccee85d8d6d423b32f6f0091a2289373d672dc2520a5463ac53cf60cd0d504f42bf5cf2528648a1602",
            "filename": "website/index.html",
            "id": "a510faccf6ec1b2a595b5f6ad644b9b3ffc5234e"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_cloudfunctions_function",
      "name": "function",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "google_cloudfunctions_function_iam_member",
      "name": "noauth_invoker",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "google_storage_bucket",
      "name": "website_bucket",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "autoclass": [],
            "cors": [],
            "custom_placement_config": [],
            "default_event_based_hold": false,
            "encryption": [],
            "force_destroy": true,
            "id": "sitedeploy10824",
            "labels": {},
            "lifecycle_rule": [],
            "location": "US-CENTRAL1",
            "logging": [],
            "name": "sitedeploy10824",
            "project": "MyGeminiathon10824HealthIOT",
            "public_access_prevention": "inherited",
            "requester_pays": false,
            "retention_policy": [],
            "self_link": "https://www.googleapis.com/storage/v1/b/sitedeploy10824",
            "soft_delete_policy": [
              {
                "effective_time": "2024-11-09T03:29:59.962Z",
                "retention_duration_seconds": 604800
              }
            ],
            "storage_class": "STANDARD",
            "timeouts": null,
            "uniform_bucket_level_access": true,
            "url": "gs://sitedeploy10824",
            "versioning": [],
            "website": [
              {
                "main_page_suffix": "index.html",
                "not_found_page": "404.html"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsInJlYWQiOjI0MDAwMDAwMDAwMCwidXBkYXRlIjoyNDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_storage_bucket_iam_member",
      "name": "public_access",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "b/sitedeploy10824",
            "condition": [],
            "etag": "CAI=",
            "id": "b/sitedeploy10824/roles/storage.objectViewer/allUsers",
            "member": "allUsers",
            "role": "roles/storage.objectViewer"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "google_storage_bucket.website_bucket"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_storage_bucket_object",
      "name": "function_zip",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "sitedeploy10824",
            "cache_control": "",
            "content": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/zip",
            "crc32c": "UajN+A==",
            "customer_encryption": [],
            "detect_md5hash": "XxUXKLTz4BSWD6Lra4ZXSQ==",
            "event_based_hold": false,
            "id": "sitedeploy10824-function.zip",
            "kms_key_name": "",
            "md5hash": "XxUXKLTz4BSWD6Lra4ZXSQ==",
            "media_link": "https://storage.googleapis.com/download/storage/v1/b/sitedeploy10824/o/function.zip?generation=1731285931889467\u0026alt=media",
            "metadata": {},
            "name": "function.zip",
            "output_name": "function.zip",
            "self_link": "https://www.googleapis.com/storage/v1/b/sitedeploy10824/o/function.zip",
            "source": "function-source/function.zip",
            "storage_class": "STANDARD",
            "temporary_hold": false,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "google_storage_bucket.website_bucket"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_storage_bucket_object",
      "name": "index_html",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "sitedeploy10824",
            "cache_control": "",
            "content": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "text/html",
            "crc32c": "CejRCw==",
            "customer_encryption": [],
            "detect_md5hash": "6nPFCsvZv84kkAbIqW5OJw==",
            "event_based_hold": false,
            "id": "sitedeploy10824-index.html",
            "kms_key_name": "",
            "md5hash": "6nPFCsvZv84kkAbIqW5OJw==",
            "media_link": "https://storage.googleapis.com/download/storage/v1/b/sitedeploy10824/o/index.html?generation=1731286286554864\u0026alt=media",
            "metadata": null,
            "name": "index.html",
            "output_name": "index.html",
            "self_link": "https://www.googleapis.com/storage/v1/b/sitedeploy10824/o/index.html",
            "source": "website/index.html",
            "storage_class": "STANDARD",
            "temporary_hold": false,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "google_storage_bucket.website_bucket"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_storage_bucket_object",
      "name": "website_files",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": "index.html",
          "schema_version": 0,
          "attributes": {
            "bucket": "sitedeploy10824",
            "cache_control": "",
            "content": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/octet-stream",
            "crc32c": "CejRCw==",
            "customer_encryption": [],
            "detect_md5hash": "6nPFCsvZv84kkAbIqW5OJw==",
            "event_based_hold": false,
            "id": "sitedeploy10824-index.html",
            "kms_key_name": "",
            "md5hash": "6nPFCsvZv84kkAbIqW5OJw==",
            "media_link": "https://storage.googleapis.com/download/storage/v1/b/sitedeploy10824/o/index.html?generation=1731285932168008\u0026alt=media",
            "metadata": {},
            "name": "index.html",
            "output_name": "index.html",
            "self_link": "https://www.googleapis.com/storage/v1/b/sitedeploy10824/o/index.html",
            "source": "website/index.html",
            "storage_class": "STANDARD",
            "temporary_hold": false,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "data.local_file.website_files",
            "google_storage_bucket.website_bucket"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
